* if

** Use ~if~ to assign a value to a variable

#+BEGIN_SRC zig
  // If expressions are used instead of a ternary expression.
  const a: u32 = 5;
  const b: u32 = 4;
  const result = if (a != b) 47 else 3089;
  print("\n>>> result: {}", .{result});

  const std = @import("std");
  const print = std.debug.print;
#+END_SRC

And that syntax only support single expression like ~var = if () A else B;~ that's why you can't do something like this:

#+BEGIN_SRC zig
  const var_name = if (true) {
      // multiple expressions
  } else {
      // multiple expressions
  };
#+END_SRC

It won't work!!!

If you really want to assign a variable after the complicated logic, you have to use =block expression return= trick like this:

#+BEGIN_SRC zig
  const a: u32 = 4;
  const b: u32 = 5;

  //
  // In zig, `blocks` are expressions, you can give it a label and return value by the `break :BLOCK_LABEL XXXX`
  //
  // `back_to_here` here is a label name, can be anything you want:)
  //
  const result = back_to_here: {
      print("\n>>> Inside 'back_to_here' block expression.", .{});

      // ...ignore the complicated logic to set `result` var value

      // return `a + b` and assign to `result`
      break :back_to_here a + b;
  };

  print("\n>>> result: {}", .{result});

  const std = @import("std");
  const print = std.debug.print;
#+END_SRC
