* Zig tutorial by examples (org version)

This tutorial helps you to learn =Zig= in a quick and easy way. It targets the following audiences:

+ With a system programming language background (C/C++/Rust, etc) and want to try =Zig=

+ Comes from a non-system programming language background and wants to give it a try


I wrote this tutorial as a summary after I use =Zig= to write a few projects (including 2D gaming), so that's why you always see straightforward summarises instead of amazing fancy words in this tutorial. 

Also, you can treat this tutorial as a quick =Q&A= or manual as well. That means you don't need to go through from top to bottom, just click the chapter you're interested in and dive in. In some chapters, I put extra links to other important and valuable blogs/youtube/articles, just in case you want to know more about that topic.

I'm working on some machine learning project with =Zig= at this moment,  I will update this tutorial from time to time, hope it helps:)


** The tutorial covers the following topics with detailed examples

*** 1. [[file:what-is-zig.org][What is Zig]]
**** 1.1. [[file:helloworld.org][Hello world cross-compilation]]
**** 1.2. [[file:helloworld-c.org][Hello world (C) cross-compilation]]
*** 2. [[file:data-types.org][Data types]]
*** 3. [[file:variables.org][Variables]]
**** 3.1. [[file:optional_var.org][Optional]]
*** 4. Control flow
**** 4.1. [[file:if.org][if]]
**** 4.2. [[file:for.org][for]]
**** 4.3. [[file:while.org][while]]
**** 4.4. [[file:switch.org][switch]]
*** 5. [[file:enum.org][Enum]]
*** 6. [[file:error.org][Error]]
*** 7. [[file:struct.org][Struct]]
**** 7.1. [[file:import-struct.org][Import struct]]
**** 7.2. [[file:anonymous-function.org][Anonymous function]]
*** 8. [[file:tagged-union.org][Tagged union]]
*** 9. [[file:array.org][Array]]
*** 10. [[file:string-format.org][String format]]
*** 11. [[file:pointer.org][Pointers]]
*** 12. [[file:slice.org][Slice]]
**** 12.1. [[file:slice-syntax.org][Slice syntax]]
**** 12.2. [[file:why-slice-intead-of-pointer.org][Why slice instead of pointer]]
**** 12.3. [[file:slice-features.org][Slice features]]
**** 12.4. [[file:slice-pitfall.org][Slice pitfall]]
*** 13. [[file:string.org][String]]
**** 13.1 [[file:manipulate-string.org][Manipulate String]]
**** 13.2 [[file:number-to-string.org][Number to string]]
*** 14. [[file:typedef.org][typedef]]
*** 15. =comptime= and generic
**** 15.1. [[file:comptime.org][comptime]]
**** 15.2. [[file:static-dispatch.org][Static dispatch]]
**** 15.3. [[file:interface.org][Interface and dynamic dispatch]]
*** 16. [[file:bits.org][Bits]]
*** 17. [[file:everything-about-logging.org][Everything about logging]]
**** 17.1 [[file:logging-in-unit-test.org][logging in unit test]]
*** 18. [[file:reader-and-writer.org][Reader and writer]]
*** 19. [[file:struct-field-compression.org][Struct fields compression]]
*** 20. [[file:builtin-functions.org][Builtin functions]]
**** 20.1. [[file:builtin-type-info.org][Type info]]
**** 20.2. [[file:builtin-type-convesion.org][Type conversion]]
**** 20.3. [[file:builtin-pointer-conversion.org][Pointer conversion]]
*** 21. [[file:memory.org][Memory]]
**** 21.1. [[file:choose-an-allocator.org][Choose an allocator]]
**** 21.2. [[file:print-memory-in-hex.org][Print memory bytes in HEX]]
*** 22. [[file:build-system.org][Build System]]
**** 22.1. [[file:how-to-create-release-build.org][Release build]]
**** 22.2. [[file:conditional-compilation.org][Conditional compilation]]
**** 22.3. [[file:build-multiple-targets.org][Build multiple targets]]
**** 22.4. [[file:custom-build-step.org][Customize build step]]
**** 22.5. [[file:a-pitfall-when-using-dependon.org][A pitfall when using dependOn]]
**** 22.6. [[file:how-to-add-exisiting-library.org][Add existing library]]
**** 22.7. [[file:compile-c-project.org][Compile C project]]
**** 22.8. [[file:modules-and-dependencies.org][Modules and dependencies]]
**** 22.9. [[file:pass-build-option-to-dependencies.org][Pass build option to dependencies]]
**** 22.10. [[file:test-fixed-dependencies-locally.org][Test fixed dependencies locally]]
*** 23. Working with C
**** 23.1. [[file:import-c-headers.org][Import C headers]]
**** 23.2. [[file:c-data-type.org][C data type]]
**** 23.3. [[file:deal-with-c-pointer.org][Deal with C pointers]]
**** 23.4. [[file:c-function-in-zig.org][C functions in Zig]]
**** 23.5. [[file:variadic-functions-in-zig.org][Variadic functions in Zig]]
*** 24. How to
**** 24.1. [[file:how-to-read-env.org][Read environment variable]]
**** 24.2. [[file:how-to-read-process-arguments.org][Read process arguments]]
**** 24.3. [[file:how-to-execute-command.org][Execute command]]
**** 24.4. [[file:how-to-use-arraylist.org][Use ArrayList]]
**** 24.5. [[file:how-to-use-hashmap.org][Use HashMap]]
**** 24.6. [[file:how-to-handle-json.org][Handle JSON]]
**** 24.7. [[file:how-to-iterator-pattern.org][Iterator pattern]]
**** 24.8. [[file:how-to-use-multithreading.org][Multithreading]]
**** 24.9. [[file:how-to-send-http-request.org][Send HTTP request]]
